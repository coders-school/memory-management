name: unique_ptr_homework
on: [push, pull_request]

jobs:
  files_check:
    runs-on: ubuntu-latest
    outputs:
      unique_ptr_exists: ${{ steps.unique_ptr.outputs.files_exists }}
    steps:
    - uses: actions/checkout@v2
    - name: Check unique_ptr.hpp file existence
      id: unique_ptr
      uses: andstor/file-existence-action@v1
      with:
        files: "homework/unique_ptr/unique_ptr.hpp"

  unique_ptr:
    needs: files_check
    if: needs.files_check.outputs.unique_ptr_exists == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests and sanitizer
      uses: ./.github/actions/run_tests
      with:
        task_name: 'unique_ptr'
        test_file: '../tests/unique_ptr_tests.cpp'

  unique_ptr_students_tests:
    needs: files_check
    if: needs.files_check.outputs.unique_ptr_exists == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests and sanitizer
      uses: ./.github/actions/run_tests
      with:
        task_name: 'unique_ptr'
        test_file: '../tests/unique_ptr_tests.cpp'
        test_to_run: 'unique_ptr_student'

  unique_ptr_formatting_check:
    needs: files_check
    if: needs.files_check.outputs.unique_ptr_exists == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run clang-format style check
      uses: jidicula/clang-format-action@v4.5.0
      with:
        check-path: 'homework/unique_ptr'

  check_shared_ptr_interface:
    needs: unique_ptr_formatting_check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check unique_ptr has whole interface implemented
      working-directory: .github/scripts
      run: ./unique_ptr_interface_check.sh

  unique_ptr_coverage:
    needs: unique_ptr_students_tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install lcov
      run: sudo apt install lcov
    - name: Run tests and sanitizer
      uses: ./.github/actions/run_tests
      with:
        task_name: 'unique_ptr'
        test_file: '../tests/unique_ptr_tests.cpp'
        test_to_run: 'unique_ptr_student'
    - name: Check coverage report
      working-directory: .github/scripts/build
      run: ../coverage.sh
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Coverage-report
        path: .github/scripts/build/report/
    - uses: JoseThen/comment-pr@v1.1.1
      if: ${{ failure() && github.event_name == 'pull_request' }}
      with:
        comment: "Coverage rate is less than 90%. You can download detailed coverage report in action's summary"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
